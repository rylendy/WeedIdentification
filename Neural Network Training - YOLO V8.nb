(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    513246,       9922]
NotebookOptionsPosition[    509450,       9854]
NotebookOutlinePosition[    509867,       9870]
CellTagsIndexPosition[    509824,       9867]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Network Training - YOLO V8 ", "Title",
 CellChangeTimes->{{3.94001543230686*^9, 
  3.94001545974374*^9}},ExpressionUUID->"6c018f7e-c104-df49-9d34-\
5fc9484bf52c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.940015480892128*^9, 3.940015494818964*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b3ee0e5a-12cb-cd46-bb9c-3206572baf59"],

Cell[BoxData["\<\"C:\\\\Users\\\\PINKY\\\\OneDrive\\\\Documents\\\\College\\\\\
2024-2025\\\\Fall '24\\\\CHEM 280 - Molecular Modeling\\\\Weed Project\"\>"], \
"Output",
 CellChangeTimes->{3.9403599116733704`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"62515608-1da7-4e42-8086-61697af15af8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<C:\\\\Users\\\\PINKY\\\\OneDrive\\\\Documents\\\\College\\\\\
2024-2025\\\\Fall '24\\\\CHEM 280 - Molecular Modeling\\\\Weed Project\>\""], \
"Input",
 CellChangeTimes->{3.9403598698464584`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"00b3d297-3127-e842-b353-92100eb1e86a"],

Cell[BoxData["\<\"C:\\\\Users\\\\PINKY\\\\OneDrive\\\\Documents\\\\College\\\\\
2024-2025\\\\Fall '24\\\\CHEM 280 - Molecular Modeling\\\\Weed Project\"\>"], \
"Output",
 CellChangeTimes->{3.94035987011265*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"63d531ba-37cc-7d46-90df-08cc08873e00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Prep ", "Section",
 CellChangeTimes->{{3.940015894900631*^9, 
  3.940015900460129*^9}},ExpressionUUID->"b2c9a0b5-d520-9848-99cf-\
1e4b93e26a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowStandard", "=", 
   RowBox[{"Thumbnail", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<Cropped Annual Sowthistle - Standard\>\"", ",", "\"\<*\>\""}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940015916250736*^9, 3.940016011511812*^9}, {
  3.9403598947599487`*^9, 3.9403599203698883`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0fc982bf-078c-c943-b501-a5cbfa50a8aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowDrought", "=", 
   RowBox[{"Thumbnail", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<Cropped Annual Sowthistle - Drought\>\"", ",", "\"\<*\>\""}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9400160656447067`*^9, 3.9400160787895527`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"da6907e2-e3da-0c42-8729-9f04b4d13d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowInjury", "=", 
   RowBox[{"Thumbnail", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<Cropped Annual Sowthistle - Injury\>\"", ",", "\"\<*\>\""}],
      "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403599579211273`*^9, 3.940359995028904*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"5d793861-8ec0-1c44-9453-0f606d497bef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowOverwatered", "=", 
   RowBox[{"Thumbnail", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<Cropped Annual Sowthistle - Overwatered\>\"", ",", "\"\<*\>\""}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940360016471855*^9, 3.9403600431585255`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b7b8d1b6-afcc-384b-959e-0ee031156190"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowStandardLabels", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"sowStandard", "->", "\"\<standard\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9403600896062126`*^9, 3.9403601372665405`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a5e0104a-5090-6f4e-ad35-3a81be243031"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowDroughtLabels", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"sowDrought", "->", "\"\<drought\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940360142813652*^9, 3.9403601637625065`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c0117470-eac4-434d-946e-cac264ad381e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowInjuryLabels", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"sowInjury", "->", "\"\<injury\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403601728925934`*^9, 3.940360195460661*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8225a8c4-960f-974c-9d36-4ba7a1d6e449"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sowOverwateredLabels", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"sowOverwatered", "->", "\"\<overwatered\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.940360201760992*^9, 3.9403602262431927`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"28d68a70-9f49-7d4c-8045-1c07e676590f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceFunction", "[", "\"\<TrainTestSplit\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9403602444548264`*^9, 3.94036025827779*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"51020f6b-a126-074b-a291-a6a210b5e526"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {1.15185546875, 9.84814453125}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {1.15185546875, 9.84814453125}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  AdjustmentBox[
                   
                   StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.0\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    #& ,
    TagBoxNote->" "],
   {"FunctionResourceBox", 
    RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
    "TrainTestSplit"},
   TagBoxNote->"FunctionResourceBox"],
  ResourceFunction[
   ResourceObject[<|
    "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
     "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
     "Version" -> "1.0.0", "Description" -> 
     "Split data into training and testing sets", "RepositoryLocation" -> 
     URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
     "SymbolName" -> 
     "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit", 
     "FunctionLocation" -> 
     CloudObject[
      "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-cf34330f7f7b"]\
|>, ResourceSystemBase -> Automatic]],
  Selectable->False]], "Output",
 CellChangeTimes->{3.94036026454373*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"615b55e6-c85b-5f49-919f-d7a461284df8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sSTrain", ",", "sSTest"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      TagBox[
       DynamicModuleBox[{Typeset`open = False}, 
        FrameBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}], 
                False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
          GridBox[{
            {GridBox[{
               {
                PaneBox[GridBox[{
                   {
                    StyleBox[
                    AdjustmentBox[
                    
                    StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                  },
                  GridBoxSpacings->{"Columns" -> {{0.25}}}],
                 Alignment->Left,
                 BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                 BaselinePosition->Baseline,
                 FrameMargins->{{3, 0}, {0, 0}}], 
                ItemBox[
                 PaneBox[
                  TogglerBox[Dynamic[Typeset`open], {True->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"]], False->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]},
                   Appearance->None,
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0],
                  Alignment->Left,
                  BaselinePosition->Baseline,
                  FrameMargins->{{1, 1}, {0, 0}}],
                 Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
              },
              BaselinePosition->{1, 1},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
            {
             StyleBox[
              PaneBox[GridBox[{
                 {
                  RowBox[{
                   TagBox["\<\"Version (latest): \"\>",
                    "IconizedLabel"], " ", 
                   TagBox["\<\"1.0.0\"\>",
                    "IconizedItem"]}]},
                 {
                  TagBox[
                   
                   TemplateBox[{
                    "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                    "HyperlinkURL"],
                   "IconizedItem"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
              FontFamily->"Roboto",
              FontSize->11]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
                GrayLevel[0.8]}, False}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open],
          BaselinePosition->Baseline,
          ImageSize->Automatic],
         Background->RGBColor[
          0.9686274509803922, 0.9764705882352941, 0.984313725490196],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 0}},
         FrameStyle->RGBColor[
          0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
         RoundingRadius->4]],
       #& ,
       TagBoxNote->" "],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", "sowStandardLabels", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940360329615181*^9, 3.9403603962540264`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f1c6a826-863c-f64c-b1e2-23a20e91b074"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sDTrain", ",", "sDTest"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      TagBox[
       DynamicModuleBox[{Typeset`open = False}, 
        FrameBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}], 
                False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
          GridBox[{
            {GridBox[{
               {
                PaneBox[GridBox[{
                   {
                    StyleBox[
                    AdjustmentBox[
                    
                    StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                  },
                  GridBoxSpacings->{"Columns" -> {{0.25}}}],
                 Alignment->Left,
                 BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                 BaselinePosition->Baseline,
                 FrameMargins->{{3, 0}, {0, 0}}], 
                ItemBox[
                 PaneBox[
                  TogglerBox[Dynamic[Typeset`open], {True->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"]], False->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]},
                   Appearance->None,
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0],
                  Alignment->Left,
                  BaselinePosition->Baseline,
                  FrameMargins->{{1, 1}, {0, 0}}],
                 Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
              },
              BaselinePosition->{1, 1},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
            {
             StyleBox[
              PaneBox[GridBox[{
                 {
                  RowBox[{
                   TagBox["\<\"Version (latest): \"\>",
                    "IconizedLabel"], " ", 
                   TagBox["\<\"1.0.0\"\>",
                    "IconizedItem"]}]},
                 {
                  TagBox[
                   
                   TemplateBox[{
                    "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                    "HyperlinkURL"],
                   "IconizedItem"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
              FontFamily->"Roboto",
              FontSize->11]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
                GrayLevel[0.8]}, False}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open],
          BaselinePosition->Baseline,
          ImageSize->Automatic],
         Background->RGBColor[
          0.9686274509803922, 0.9764705882352941, 0.984313725490196],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 0}},
         FrameStyle->RGBColor[
          0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
         RoundingRadius->4]],
       #& ,
       TagBoxNote->" "],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", "sowDroughtLabels", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940360414344841*^9, 3.9403604236747437`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e4b754eb-f25f-184d-9f9d-5527647bf83b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sITrain", ",", "sITest"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      TagBox[
       DynamicModuleBox[{Typeset`open = False}, 
        FrameBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}], 
                False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
          GridBox[{
            {GridBox[{
               {
                PaneBox[GridBox[{
                   {
                    StyleBox[
                    AdjustmentBox[
                    
                    StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                  },
                  GridBoxSpacings->{"Columns" -> {{0.25}}}],
                 Alignment->Left,
                 BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                 BaselinePosition->Baseline,
                 FrameMargins->{{3, 0}, {0, 0}}], 
                ItemBox[
                 PaneBox[
                  TogglerBox[Dynamic[Typeset`open], {True->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"]], False->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]},
                   Appearance->None,
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0],
                  Alignment->Left,
                  BaselinePosition->Baseline,
                  FrameMargins->{{1, 1}, {0, 0}}],
                 Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
              },
              BaselinePosition->{1, 1},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
            {
             StyleBox[
              PaneBox[GridBox[{
                 {
                  RowBox[{
                   TagBox["\<\"Version (latest): \"\>",
                    "IconizedLabel"], " ", 
                   TagBox["\<\"1.0.0\"\>",
                    "IconizedItem"]}]},
                 {
                  TagBox[
                   
                   TemplateBox[{
                    "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                    "HyperlinkURL"],
                   "IconizedItem"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
              FontFamily->"Roboto",
              FontSize->11]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
                GrayLevel[0.8]}, False}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open],
          BaselinePosition->Baseline,
          ImageSize->Automatic],
         Background->RGBColor[
          0.9686274509803922, 0.9764705882352941, 0.984313725490196],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 0}},
         FrameStyle->RGBColor[
          0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
         RoundingRadius->4]],
       #& ,
       TagBoxNote->" "],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", "sowInjuryLabels", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403604343686886`*^9, 3.940360443418026*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0fe2c2d8-b2de-6a4d-9e15-8448806e7b4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sOTrain", ",", "sOTest"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      TagBox[
       DynamicModuleBox[{Typeset`open = False}, 
        FrameBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}], 
                False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"],
                 ImageSizeCache->{11., {1.15185546875, 9.84814453125}}]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
          GridBox[{
            {GridBox[{
               {
                PaneBox[GridBox[{
                   {
                    StyleBox[
                    AdjustmentBox[
                    
                    StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                  },
                  GridBoxSpacings->{"Columns" -> {{0.25}}}],
                 Alignment->Left,
                 BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                 BaselinePosition->Baseline,
                 FrameMargins->{{3, 0}, {0, 0}}], 
                ItemBox[
                 PaneBox[
                  TogglerBox[Dynamic[Typeset`open], {True->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"]], False->
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]},
                   Appearance->None,
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0],
                  Alignment->Left,
                  BaselinePosition->Baseline,
                  FrameMargins->{{1, 1}, {0, 0}}],
                 Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
              },
              BaselinePosition->{1, 1},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
            {
             StyleBox[
              PaneBox[GridBox[{
                 {
                  RowBox[{
                   TagBox["\<\"Version (latest): \"\>",
                    "IconizedLabel"], " ", 
                   TagBox["\<\"1.0.0\"\>",
                    "IconizedItem"]}]},
                 {
                  TagBox[
                   
                   TemplateBox[{
                    "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                    "HyperlinkURL"],
                   "IconizedItem"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
              FontFamily->"Roboto",
              FontSize->11]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
                GrayLevel[0.8]}, False}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open],
          BaselinePosition->Baseline,
          ImageSize->Automatic],
         Background->RGBColor[
          0.9686274509803922, 0.9764705882352941, 0.984313725490196],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 0}},
         FrameStyle->RGBColor[
          0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
         RoundingRadius->4]],
       #& ,
       TagBoxNote->" "],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", "sowOverwateredLabels", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403604556435223`*^9, 3.9403604677346897`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"d3f9aefb-67b3-1846-9e12-ede5159b3f86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalTraining", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"sSTrain", ",", "sDTrain", ",", "sITrain", ",", "sOTrain"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403604966860504`*^9, 3.9403605739179497`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e8db16e4-4e0e-574f-a5a1-a58175c068a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalTesting", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"sSTest", ",", "sDTest", ",", "sITest", ",", "sOTest"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9403605930309906`*^9, 3.9403606141856804`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6a3fd8e4-a056-8e4c-896d-525ea7f48d64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network Prep ", "Section",
 CellChangeTimes->{{3.9403606338921947`*^9, 
  3.940360640328287*^9}},ExpressionUUID->"b40ebb0e-a9c1-ca49-b7f3-\
82b157001e59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempNet", "=", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
    "NetModel", "[", 
     "\"\<YOLO V8 Classify Trained on ImageNet Competition Data\>\"", "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9403606713984604`*^9, 3.940360707435898*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"4fb99fd9-9913-3542-85c6-38bf76cf40cf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"image\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 3, 3, 
                    3}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {224, 224}, 
                    "$OutputSize" -> {112, 112}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 16, "$SpatialDimensions" -> {112, 112}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 112, 112}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{32, 16, 3,
                     3}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {112, 112}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 32, "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 32, "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[17, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 16|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 48, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 48, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    48|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 32, "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_3" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 32, 3,
                     3}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_3" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 64, "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 64, "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[33, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    128|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 64, "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_4" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 64, 
                    3, 3}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_4" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    128|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[65, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    256|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_5" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 128, 
                    3, 3}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_5" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 256|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[129, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 384, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 384, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 384|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_6" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1280, 256,
                     1, 1}], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 1280, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 256|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_6" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1280}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1280}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1280}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1280}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 1280, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {1280, 7, 7}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "GlobalAveragePool" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{224, 224}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Fit", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1280}, NeuralNetworks`RealT]|>|>, 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]224\[Times]224\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 16\[Times]112\[Times]112\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 16\[Times]112\[Times]112\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 16\[Times]112\[Times]112\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 32\[Times]56\[Times]56\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 32\[Times]56\[Times]56\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 32\[Times]56\[Times]56\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"C2f_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "9", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 32\[Times]56\[Times]56\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "C2f_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 64\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 64\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 64\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"C2f_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 64\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "C2f_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"C2f_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "C2f_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"C2f_4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "9", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "C2f_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "C2f_4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv_6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Conv_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Bn_6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Bn_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Bn_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Swish_6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Swish_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[Times]7\[Times]7\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "Swish_6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"GlobalAveragePool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "GlobalAveragePool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "GlobalAveragePool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "GlobalAveragePool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 6269416, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 6269416, 
            7383300841688726956028586399140009295422661754746349419408, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<23>]"& )],
  False,
  BoxID -> 7383300841688726956028586399140009295422661754746349419408,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940360710634945*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"08a850f2-027c-8c49-b7b8-4385911fdb42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newNet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<pretrainedNet\>\"", "->", "tempNet"}], ",", 
      RowBox[{"\"\<linearNew\>\"", "->", 
       RowBox[{"LinearLayer", "[", "4", "]"}]}], ",", 
      RowBox[{"\"\<softmax\>\"", "->", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
    RowBox[{"\"\<Output\>\"", "->", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<standard\>\"", ",", "\"\<drought\>\"", ",", "\"\<injury\>\"", 
          ",", "\"\<overwatered\>\""}], "}"}]}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9403608872502155`*^9, 3.940361043047846*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"da648731-6124-c246-abd6-de761c531f84"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                    Center, Center, 32], 
                   InsetBox[
                    FormBox[
                    FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   PlotRange -> {{-12, 40}, {-2, 30}}, 
                   ImageSize -> {60, 36}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"image\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                    Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                    Center, Center, 32], 
                   InsetBox[
                    FormBox[
                    FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   PlotRange -> {{-12, 40}, {-2, 30}}, 
                   ImageSize -> {60, 36}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "pretrainedNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 3, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {224, 224}, 
                    "$OutputSize" -> {112, 112}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 16, "$SpatialDimensions" -> {112, 112}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 112, 112}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 16, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {112, 112}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 32, "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[17, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 48, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 48|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_3" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_3" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 64, "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[33, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_4" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_4" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[65, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 256|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_5" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_5" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 256|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[129, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 384, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 384, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 384|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_6" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1280, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 1280, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 256|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_6" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1280}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 1280, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {1280, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "GlobalAveragePool" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linearNew" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{4, 1280}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1280, "$InputDimensions" -> {1280}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearNew", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearNew", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{224, 224}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Fit", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"standard\"", "\"drought\"", "\"injury\"", 
                    "\"overwatered\""}, "InputDepth" -> 1, "Multilabel" -> 
                    False, "Dimensions" -> 4, "$Rank" -> 0, "$Version" -> 
                    "14.1.2"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]224\[Times]224\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pretrainedNet\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linearNew\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 6280504, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 6280504, 
            7383300841688726956028586399140009295441108498819680407424, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<3>]"& )],
  False,
  BoxID -> 7383300841688726956028586399140009295441108498819680407424,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940361050971321*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"b55cdcc9-3098-5e46-9200-88a9ff8bf79a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"newNet", ",", "totalTraining", ",", 
    RowBox[{"LearningRateMultipliers", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<linearNew\>\"", "->", "1"}], ",", 
       RowBox[{"_", "->", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.940361756407404*^9, 3.9403618191322937`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"9c4c9d96-1747-0f4f-850a-b8f3e11e4113"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"image\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "pretrainedNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 3, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {224, 224}, 
                    "$OutputSize" -> {112, 112}, "$WeightsInputChannels" -> 
                    3|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 16, "$SpatialDimensions" -> {112, 112}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 112, 112}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 16, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {112, 112}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16, 112, 112}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 32, "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 32|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[17, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {56, 56}, "$WeightsInputChannels" -> 
                    16|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {16, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16, 56, 
                    56}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 48, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 32, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "$WeightsInputChannels" -> 48|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 56, 56}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_3" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 32, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {56, 56}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 56, 56}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_3" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 64, "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 64|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[33, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 32, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 
                    32|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{32}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {32, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{32, 28, 
                    28}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 64, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 28, 28}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_4" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_4" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 128|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[65, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck_1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Bottleneck_2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64, 14,
                     14}, NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    64|>, "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{64}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"Momentum" -> 0.8999999761581421, 
                    "Epsilon" -> 9.999999747378752*^-6, "Interleaving" -> 
                    False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {64, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 14, 
                    14}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], "Input3" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$WeightsInputChannels" -> 256|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_5" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_5" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "C2f_4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 256|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Part" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[129, -1]}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bottleneck" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Conv_1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_1" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None|>, "Parameters" -> <|
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 128|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 128, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {128, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128, 7, 
                    7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Add", "Outputs", "Output"]}|>, 
                    "Concat" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT],
                     "Input2" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Conv_2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 384, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|"OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 384, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$WeightsInputChannels" -> 384|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_2" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    256}]|>, "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 256, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {256, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Part", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bottleneck", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Concat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"]}|>, 
                    "Conv_6" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1280, 256, 1, 1}], 
                    "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 1280, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {7, 7}, "$WeightsInputChannels" -> 256|>,
                     "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Bn_6" -> <|"Type" -> "BatchNormalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1280}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1280}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    9.999999747378752*^-6, "Interleaving" -> False, 
                    "$Channels" -> 1280, "$SpatialDimensions" -> {7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Swish_6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {1280, 7, 7}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>|>, 
                    "GlobalAveragePool" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1280, 7, 7}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "C2f_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Bn_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Swish_6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "GlobalAveragePool", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linearNew" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 1280}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1280, "$InputDimensions" -> {1280}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1280}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearNew", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearNew", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{224, 224}], 
                    "ColorSpace" -> "RGB", "ColorChannels" -> 3, 
                    "Interleaving" -> False, "MeanImage" -> None, 
                    "VarianceImage" -> None, "DataTransposed" -> False, 
                    "Method" -> "Fit", "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "14.1.2"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"standard\"", "\"drought\"", "\"injury\"", 
                    "\"overwatered\""}, "InputDepth" -> 1, "Multilabel" -> 
                    False, "Dimensions" -> 4, "$Rank" -> 0, "$Version" -> 
                    "14.1.2"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]224\[Times]224\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pretrainedNet\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1280\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "pretrainedNet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linearNew\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "linearNew"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 6303800, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 6303800, 
            7383300841688726956028586399140009295459555242893211509664, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<3>]"& )],
  False,
  BoxID -> 7383300841688726956028586399140009295459555242893211509664,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9403618525264072`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"08f42a42-ffc3-c845-84fe-8bfb19f9c73e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"trainedNet", ",", "totalTesting", ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9403618726013374`*^9, 3.9403619000265923`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"af89543d-4f34-464c-a851-ea5b1a61261f"],

Cell[BoxData["0.7272727272727273`"], "Output",
 CellChangeTimes->{3.9403619044741135`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d1ed684d-f9f4-5a40-8712-f226e436ecb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"trainedNet", ",", "totalTesting"}], "]"}]], "Input",
 CellChangeTimes->{{3.9403619083917294`*^9, 3.940361940683897*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"ea798f06-5add-5a4e-8524-171f4b2de9ef"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"373ef643-9d73-1140-8071-aa5a96f62570"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "44"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"73.", "7."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   72.7272727272727337322`3., 6.791703342160277046`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   TooltipStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"32.", "7."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   31.8181818181818165669`3., 7.1029333730792219015`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.4785332594840235876`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0306862017765338613`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.417160855930955865`3.", 
                  "\", \"", "0.5399056630370913101`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.417160855930955865`3., 
                  ", ", 0.5399056630370913101`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.7370295627010814421`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0640816688941766577`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.6088662249127281267`3.",
                   "\", \"", "0.8651929004894347575`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.6088662249127281267`3., 
                  ", ", 0.8651929004894347575`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"25.1`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"64.1`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTXvWPKnK839ovCVLos5r40n5z1PFoE6b7
GOpg9Pa7L8ujD7y2L7iwq0l45UP7cyZ3tnoKV+NUj4v2ny393L/rrT2ng/0O
/yP37Selqq/aHJmPU/3014t74he+sf9eIqkXsOWZ/R2+Wsn3GZdJdo/N48RT
MkLv7B/sjN/N2vDG3v0+t9lvxedw+YdVIuvcH96yZ0ABxPsLlzsBfoV5Fg==

                 "], {{0, 0}, {4, 4}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "\"standard\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7142857142857143`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7142857142857143`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.7142857142857143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{10, " examples of ", "standard", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.7142857142857143}], 
                    Row[{"Recall = ", 0.7142857142857143}], 
                    Row[{"FScore = ", 0.7142857142857143}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "\"drought\"", 
                    "\" misclassified as \"", "\"standard\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.2857142857142857`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.3333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{4, " examples of ", "drought", " misclassified as ", 
                    "standard"}], 
                    Row[{"Column fraction = ", 0.2857142857142857}], 
                    Row[{"Row fraction = ", 0.3333333333333333}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"injury\"", 
                    "\" misclassified as \"", "\"standard\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "injury", " misclassified as ", 
                    "standard"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"overwatered\"", 
                    "\" misclassified as \"", "\"standard\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "overwatered", 
                    " misclassified as ", "standard"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"standard\"", 
                    "\" misclassified as \"", "\"drought\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "standard", " misclassified as ", 
                    "drought"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "\"drought\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.7`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.5833333333333334`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.6363636363636364`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{7, " examples of ", "drought", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.7}], 
                    Row[{"Recall = ", 0.5833333333333334}], 
                    Row[{"FScore = ", 0.6363636363636364}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"injury\"", 
                    "\" misclassified as \"", "\"drought\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "injury", " misclassified as ", 
                    "drought"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"overwatered\"", 
                    "\" misclassified as \"", "\"drought\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.3`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.3`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{3, " examples of ", "overwatered", 
                    " misclassified as ", "drought"}], 
                    Row[{"Column fraction = ", 0.3}], 
                    Row[{"Row fraction = ", 0.3}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"standard\"", 
                    "\" misclassified as \"", "\"injury\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "standard", " misclassified as ", 
                    "injury"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"drought\"", 
                    "\" misclassified as \"", "\"injury\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "drought", " misclassified as ", 
                    "injury"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "\"injury\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{8, " examples of ", "injury", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"overwatered\"", 
                    "\" misclassified as \"", "\"injury\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "overwatered", 
                    " misclassified as ", "injury"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "\"standard\"", 
                    "\" misclassified as \"", "\"overwatered\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.3333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.2857142857142857`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{4, " examples of ", "standard", " misclassified as ",
                     "overwatered"}], 
                    Row[{"Column fraction = ", 0.3333333333333333}], 
                    Row[{"Row fraction = ", 0.2857142857142857}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"drought\"", 
                    "\" misclassified as \"", "\"overwatered\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.08333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.08333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "drought", " misclassified as ", 
                    "overwatered"}], 
                    Row[{"Column fraction = ", 0.08333333333333333}], 
                    Row[{"Row fraction = ", 0.08333333333333333}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"injury\"", 
                    "\" misclassified as \"", "\"overwatered\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "injury", " misclassified as ", 
                    "overwatered"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "\"overwatered\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.5833333333333334`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.7`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.6363636363636364`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{7, " examples of ", "overwatered", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.5833333333333334}], 
                    Row[{"Recall = ", 0.7}], 
                    Row[{"FScore = ", 0.6363636363636364}]}], "Tooltip"]& ]}, 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"standard\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7142857142857143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " example", "s", " of class ", "standard"}], 
                    Row[{"Recall = ", 0.7142857142857143}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"drought\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.5833333333333334`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "drought"}], 
                    Row[{"Recall = ", 0.5833333333333334}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"injury\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " example", "s", " of class ", "injury"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"overwatered\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.7`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "overwatered"}], 
                    Row[{"Recall = ", 0.7}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"standard\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7142857142857143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " example", "s", " classified as ", "standard"}], 
                    Row[{"Precision = ", 0.7142857142857143}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"drought\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.7`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " classified as ", "drought"}], 
                    Row[{"Precision = ", 0.7}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"injury\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " example", "s", " classified as ", "injury"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"overwatered\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.5833333333333334`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{12, " example", "s", " classified as ", 
                    "overwatered"}], 
                    Row[{"Precision = ", 0.5833333333333334}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"standard\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"drought\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"injury\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"overwatered\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["14", TraditionalForm]}, {2.5, 
                    FormBox["12", TraditionalForm]}, {1.5, 
                    FormBox["8", TraditionalForm]}, {0.5, 
                    FormBox["10", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["14", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["10", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["8", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["12", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"standard\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"drought\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"injury\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"overwatered\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->212.4,
                
                Method->{
                 "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                  "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.940361944701929*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"b067220d-6e95-774f-8861-375b52f403c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{571.8, 579.6},
WindowMargins->{{-7.199999999999999, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"753e5b9b-68b0-264e-b087-f6d23ff46617"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 175, 3, 157, "Title",ExpressionUUID->"6c018f7e-c104-df49-9d34-5fc9484bf52c"],
Cell[CellGroupData[{
Cell[776, 29, 248, 4, 28, "Input",ExpressionUUID->"b3ee0e5a-12cb-cd46-bb9c-3206572baf59"],
Cell[1027, 35, 291, 4, 51, "Output",ExpressionUUID->"62515608-1da7-4e42-8086-61697af15af8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355, 44, 290, 4, 47, "Input",ExpressionUUID->"00b3d297-3127-e842-b353-92100eb1e86a"],
Cell[1648, 50, 288, 4, 51, "Output",ExpressionUUID->"63d531ba-37cc-7d46-90df-08cc08873e00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1973, 59, 155, 3, 66, "Section",ExpressionUUID->"b2c9a0b5-d520-9848-99cf-1e4b93e26a31"],
Cell[2131, 64, 431, 10, 66, "Input",ExpressionUUID->"0fc982bf-078c-c943-b501-a5cbfa50a8aa"],
Cell[2565, 76, 380, 9, 66, "Input",ExpressionUUID->"da6907e2-e3da-0c42-8729-9f04b4d13d28"],
Cell[2948, 87, 370, 8, 66, "Input",ExpressionUUID->"5d793861-8ec0-1c44-9453-0f606d497bef"],
Cell[3321, 97, 386, 9, 66, "Input",ExpressionUUID->"b7b8d1b6-afcc-384b-959e-0ee031156190"],
Cell[3710, 108, 320, 7, 28, "Input",ExpressionUUID->"a5e0104a-5090-6f4e-ad35-3a81be243031"],
Cell[4033, 117, 312, 6, 28, "Input",ExpressionUUID->"c0117470-eac4-434d-946e-cac264ad381e"],
Cell[4348, 125, 309, 6, 28, "Input",ExpressionUUID->"8225a8c4-960f-974c-9d36-4ba7a1d6e449"],
Cell[4660, 133, 327, 7, 28, "Input",ExpressionUUID->"28d68a70-9f49-7d4c-8045-1c07e676590f"],
Cell[CellGroupData[{
Cell[5012, 144, 236, 3, 28, "Input",ExpressionUUID->"51020f6b-a126-074b-a291-a6a210b5e526"],
Cell[5251, 149, 7825, 192, 35, "Output",ExpressionUUID->"615b55e6-c85b-5f49-919f-d7a461284df8"]
}, Open  ]],
Cell[13091, 344, 8628, 204, 31, "Input",ExpressionUUID->"f1c6a826-863c-f64c-b1e2-23a20e91b074"],
Cell[21722, 550, 8627, 204, 31, "Input",ExpressionUUID->"e4b754eb-f25f-184d-9f9d-5527647bf83b"],
Cell[30352, 756, 8626, 204, 31, "Input",ExpressionUUID->"0fe2c2d8-b2de-6a4d-9e15-8448806e7b4f"],
Cell[38981, 962, 8633, 204, 31, "Input",ExpressionUUID->"d3f9aefb-67b3-1846-9e12-ede5159b3f86"],
Cell[47617, 1168, 377, 8, 47, "Input",ExpressionUUID->"e8db16e4-4e0e-574f-a5a1-a58175c068a2"],
Cell[47997, 1178, 371, 8, 47, "Input",ExpressionUUID->"6a3fd8e4-a056-8e4c-896d-525ea7f48d64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48405, 1191, 160, 3, 66, "Section",ExpressionUUID->"b40ebb0e-a9c1-ca49-b7f3-82b157001e59"],
Cell[CellGroupData[{
Cell[48590, 1198, 443, 12, 104, "Input",ExpressionUUID->"4fb99fd9-9913-3542-85c6-38bf76cf40cf"],
Cell[49036, 1212, 152040, 2840, 84, "Output",ExpressionUUID->"08a850f2-027c-8c49-b7b8-4385911fdb42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201113, 4057, 855, 21, 142, "Input",ExpressionUUID->"da648731-6124-c246-abd6-de761c531f84"],
Cell[201971, 4080, 130493, 2344, 84, "Output",ExpressionUUID->"b55cdcc9-3098-5e46-9200-88a9ff8bf79a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332501, 6429, 466, 10, 47, "Input",ExpressionUUID->"9c4c9d96-1747-0f4f-850a-b8f3e11e4113"],
Cell[332970, 6441, 128995, 2317, 84, "Output",ExpressionUUID->"08f42a42-ffc3-c845-84fe-8bfb19f9c73e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462002, 8763, 295, 5, 28, "Input",ExpressionUUID->"af89543d-4f34-464c-a851-ea5b1a61261f"],
Cell[462300, 8770, 169, 2, 32, "Output",ExpressionUUID->"d1ed684d-f9f4-5a40-8712-f226e436ecb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462506, 8777, 265, 4, 28, "Input",ExpressionUUID->"ea798f06-5add-5a4e-8524-171f4b2de9ef"],
Cell[462774, 8783, 46636, 1066, 500, "Output",ExpressionUUID->"b067220d-6e95-774f-8861-375b52f403c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

